{"version":3,"sources":["pages/ConnectWallet.tsx","components/TextField.tsx","pages/SwapWncg.tsx","App.tsx","index.tsx"],"names":["ConnectWalletPage","connect","style","margin","onClick","TextField","onChange","label","others","labelLeft","event","undefined","target","value","SwapWncgPage","address","chain","useNetwork","contractAddress","useMemo","id","mainnet","ropsten","goerli","useBalance","addressOrName","token","data","isLoading","error","signer","useSigner","contract","useContract","contractInterface","erc20ABI","signerOrProvider","useState","ncAddress","setNcAddress","amount","setAmount","burnAmount","Decimal","mul","pow","minWidth","overflow","justify","span","weight","toString","div","decimals","message","indexOf","isAddress","preventDefault","console","log","burn","BigNumber","from","repeat","then","debug","App","useAccount","isConnected","useConnect","connector","InjectedConnector","SwapWncg","ConnectWallet","client","createClient","autoConnect","provider","config","getDefaultProvider","chainId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d6e4405.chunk.js","sourcesContent":["import { Button, Container, Row, Spacer } from \"@nextui-org/react\";\nimport React from \"react\"\n\ninterface ConnectWalletPageProps {\n    connect: () => void;\n}\n\nconst ConnectWalletPage: React.FC<ConnectWalletPageProps> = ({ connect }) => {\n    return (\n        <Container style={{margin: \"10vh 10vw\"}}>\n            <Row>\n                <h1>MetaMask is not connected.</h1>\n            </Row>\n            <Spacer/>\n            <Row>\n                <Button onClick={() => connect()}>\n                    Connect Wallet\n                </Button>\n            </Row>\n        </Container>\n    );\n}\n\nexport default ConnectWalletPage;\n","import { Input } from \"@nextui-org/react\";\n\nexport interface TextInputProps {\n    onChange?: (value: string) => void,\n    value?: string,\n    label: string,\n    readOnly?: boolean,\n}\n\nexport const TextField: React.FC<TextInputProps> = ({ onChange, label, ...others }) => {\n    return (\n        <div>\n            <Input labelLeft={label} onChange={event => { if (onChange !== undefined) onChange(event.target.value) }} {...others} />\n        </div>\n    )\n}\n","import { Button, Container, Row, Spacer, Text } from \"@nextui-org/react\";\nimport Decimal from \"decimal.js\";\nimport { BigNumber } from \"ethers\";\nimport { isAddress } from \"ethers/lib/utils\";\nimport { useState, useMemo } from \"react\";\nimport { erc20ABI, useBalance, useContract, useNetwork, useSigner } from \"wagmi\";\nimport { TextField } from \"../components/TextField\";\nimport { mainnet, ropsten, goerli } from 'wagmi/chains'\n\ninterface SwapWncgPageProps {\n    address: string,\n};\n\nconst SwapWncgPage: React.FC<SwapWncgPageProps> = ({ address }) => {\n  const { chain } = useNetwork();\n\n  const contractAddress = useMemo<string>(() => {\n    if (chain?.id === mainnet.id) {\n      return \"0xf203ca1769ca8e9e8fe1da9d147db68b6c919817\";\n    } else if (chain?.id === ropsten.id) {\n      return \"0xeaa982f3424338598738c496153e55b1df11f625\";\n    } else if (chain?.id === goerli.id) {\n      return \"0xafbf2bee0c4803c13436db44509267fa2312ad33\";      \n    } else {\n      return \"0xad84431776e966400a8aecaf7bd2316a69c54efe\";\n    }\n  }, [chain]);\n\n  const { data, isLoading, error } = useBalance({\n    addressOrName: address,\n    token: contractAddress,\n  });\n\n  const { data: signer } = useSigner();\n  const contract = useContract({\n    addressOrName: contractAddress,\n    contractInterface: [\n        \"function burn(uint256 amount, bytes32 to) public\",\n        ...erc20ABI,\n    ],\n    signerOrProvider: signer,\n  });\n\n  const [ncAddress, setNcAddress] = useState<string>(\"\");\n  const [amount, setAmount] = useState<string>(\"0\");\n  const burnAmount = useMemo<Decimal | null>(() => {\n    try {\n      return new Decimal(amount || \"0\").mul(new Decimal(10).pow(18))\n    } catch {\n      return null;\n    }\n  }, [amount]);\n\n  return (\n    <Container style={{\n      margin: \"30vh 0\",\n      minWidth: \"100%\",\n      overflow: \"hidden\",\n    }}>\n      <Row justify=\"center\">\n        <Text>Your wNCG : {\n          isLoading\n            ? <Text span={true}>ðŸ•‘</Text>\n            : <Text weight=\"bold\" span={true}>{\n                  data !== undefined\n                      ? new Decimal(data.value.toString()).div(new Decimal(10).pow(data.decimals)).toString()\n                      : error?.message\n              }</Text>\n        }</Text>\n      </Row>\n      <Spacer />\n      <Spacer />\n      <Row justify=\"center\">\n        <TextField label={'To'} onChange={setNcAddress}/>\n      </Row>\n      <Spacer />\n      <Row justify=\"center\">\n        <TextField label={'Amount'} onChange={setAmount}/>\n      </Row>\n      <Spacer />\n      <Row justify=\"center\">\n        {\n          contract === null || burnAmount === null || burnAmount.toString().indexOf(\".\") !== -1 || !isAddress(ncAddress)\n            ? <Text weight={\"bold\"}>Fill corret values</Text>\n            : <Button onClick={event => {\n              event.preventDefault();    \n              console.log(contract);\n              contract.burn(BigNumber.from(burnAmount.toString()), ncAddress + \"0\".repeat(24)).then(console.debug)\n            }}>Burn</Button>\n        }\n      </Row>\n    </Container>\n  );\n}\n\nexport default SwapWncgPage;\n","import { useAccount, useConnect } from 'wagmi';\nimport { InjectedConnector } from 'wagmi/connectors/injected'\nimport ConnectWalletPage from './pages/ConnectWallet';\nimport SwapWncgPage from './pages/SwapWncg';\n\nfunction App() {\n  const { address, isConnected } = useAccount();\n  const { connect } = useConnect({\n    connector: new InjectedConnector(),\n  });\n\n  if (!isConnected) {    \n    return (\n      <ConnectWalletPage connect={connect} />\n    );\n  }\n\n  if (address === undefined) {\n    return (\n      <b>Error occurred while fetching address.</b>\n    )\n  }\n\n  return (\n    <SwapWncgPage address={address} />\n  )\n}\n\nexport default App;\n","import { NextUIProvider } from '@nextui-org/react';\nimport { getDefaultProvider } from 'ethers';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createClient, WagmiConfig } from 'wagmi';\nimport App from './App';\n\nconst client = createClient({\n  autoConnect: true,\n  provider: config => getDefaultProvider(config.chainId),\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <NextUIProvider>\n      <WagmiConfig client={client}>\n        <App />\n      </WagmiConfig>\n    </NextUIProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}